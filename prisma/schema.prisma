generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model destinations {
  id                          Int                     @id @default(autoincrement())
  name                        String
  country                     String
  description                 String
  image_url                   String
  best_time_to_visit          String
  average_cost_per_day_in_eur Decimal                 @db.Decimal
  tags                        String[]
  things_to_do                String[]
  favorite_destinations       favorite_destinations[]
  reviews                     reviews[]
  visited_destinations        visited_destinations[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model reviews {
  id             Int           @id @default(autoincrement())
  user_id        Int?
  destination_id Int?
  rating         Int?
  comment        String?
  created_at     DateTime?     @default(now()) @db.Timestamp(6)
  destinations   destinations? @relation(fields: [destination_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users          users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

 // id  Int,  is automatically unique
model users {
  id                    Int                     @id @default(autoincrement())
  username              String                  @unique 
  password              String
  email                 String
  birthday              DateTime                @db.Date
  favorite_destinations favorite_destinations[]
  reviews               reviews[]
  visited_destinations  visited_destinations[]
}

model visited_destinations {
  user_id        Int
  destination_id Int
  destinations   destinations @relation(fields: [destination_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users          users        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, destination_id])
}

model favorite_destinations {
  user_id        Int
  destination_id Int
  destinations   destinations @relation(fields: [destination_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users          users        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([user_id, destination_id])
}
